name: Vercel Preview Deployment

env:
  # The project and org IDs are required for Vercel CLI to link to the correct project
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

# --------------------------------------------------------------------------------
# FIX: Use TWO separate triggers for deployment and cleanup
# --------------------------------------------------------------------------------
on:
  # Trigger deployment on PR opening/new commits (synchronize)
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - master # Include master if you use it

  # Trigger cleanup when a PR is closed (merged or manually closed)
  pull_request_target:
    types: [closed]

jobs:
  # ==============================================================================
  # 1. DEPLOYMENT JOB (Runs when PR is opened/updated)
  # ==============================================================================
  deploy-preview:
    # Only run this job if the PR is NOT closing
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write # Grants permission to comment on the PR

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy Preview to Vercel
        id: vercel_deploy
        run: |
          # The deployment command uses the branch name to create a unique preview URL.
          # The branch name is automatically available to Vercel.
          vercel deploy \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --prod=false \
            --confirm \
            | tee deployment_url.txt

      - name: Extract Deployment URL
        id: get_url
        # Extract URL from the last line of the Vercel output
        run: echo "PREVIEW_URL=$(cat deployment_url.txt | tail -n 1)" >> $GITHUB_OUTPUT

      - name: Comment on Pull Request with Preview URL
        uses: actions/github-script@v6
        with:
          script: |
            const previewUrl = process.env.PREVIEW_URL;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Vercel Preview Deployment Successful!**\n\n- **Preview URL:** [Click to view](${previewUrl})\n- **Branch:** \`${context.payload.pull_request.head.ref}\`\n\nReview the changes live before merging!`,
            })
        env:
          PREVIEW_URL: ${{ steps.get_url.outputs.PREVIEW_URL }}

  # ==============================================================================
  # 2. CLEANUP JOB (Runs when PR is closed/merged)
  # ==============================================================================
  vercel-cleanup:
    # FIX: Only run this job if the PR is closing.
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    # Needs deploy-preview is not necessary since they run on different events.

    steps:
      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Vercel Cleanup Deployment
        # FIX: Changed to 'vercel remove' (Vercel CLI v34+) for removing the deployment.
        # The Vercel CLI removes deployments based on the git branch name.
        run: |
          echo "Attempting to remove Vercel deployment for branch: ${{ github.event.pull_request.head.ref }}"
          vercel remove ${{ github.event.pull_request.head.ref }} \
            --token=${{ secrets.VERCEL_TOKEN }} \
            --yes \
            --scope ${{ secrets.VERCEL_ORG_ID }} \
            --project ${{ secrets.VERCEL_PROJECT_ID }} \
            || true # Ignore failure if deployment is already gone